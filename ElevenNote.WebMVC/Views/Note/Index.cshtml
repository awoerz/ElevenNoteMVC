@model IEnumerable<ElevenNote.Models.NoteListItem>

@{
    ViewBag.Title = "Index";
}


<div class="container body-content my-5 text-white">

    <div class="d-flex justify-content-between mb-3">
        <h2>Notes</h2>
        @Html.ActionLink("Create New +", "Create", new { id = "create-note-btn" }, htmlAttributes: new { @class = "btn btn-success" })
    </div>
    @if (TempData.ContainsKey("SaveResult"))
    {
        <div class="alert alert-success fade in" role="alert">
            <button type="button" class="close" data-dismiss="alert">
                <span>&times;</span>
            </button>
            @TempData["SaveResult"]
        </div>
    }
    <div class="container d-flex flex-wrap my-5">
        <div class="row g-3">
            @foreach (var item in Model)
            {
            <div class="col-xl-3 col-lg-4 col-md-6">
                <div class="card bg-dark text-white" style="width: 18rem;">
                    <div class="card-body my-3">
                        <h5 class="card-title my-3">@Html.DisplayFor(modelItem => item.Title)</h5>
                        <h6 class="card-subtitle mb-2 text-muted">Created: @Html.DisplayFor(modelItem => item.CreatedUtc)</h6>
                        @*<p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>*@
                        <div class="d-flex justify-content-evenly my-3">
                            @Html.ActionLink("Edit", "Edit", new { id = item.NoteId }, htmlAttributes: new { @class = "btn btn-warning" }) |
                            @Html.ActionLink("Details", "Details", new { id = item.NoteId }, htmlAttributes: new { @class = "btn btn-info" }) |
                            @Html.ActionLink("Delete", "Delete", new { id = item.NoteId }, htmlAttributes: new { @class = "btn btn-danger" })
                        </div>
                    </div>
                </div>
            </div>
            }
        </div>
    </div>
    <br />



    @*</table>*@
</div>